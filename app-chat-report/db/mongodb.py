import os
from typing import Any, Dict

import certifi
from dotenv import load_dotenv
from fastapi import HTTPException
from pymongo import MongoClient
from pymongo.errors import ConnectionFailure
from utils.logger import logger

load_dotenv()  # .env ÌååÏùº ÏûêÎèô Î°úÎìú


env = os.getenv("ENVIRONMENT")
if env == "dev":
    DB_NAME = os.getenv("MONGODB_DB_NAME_DEV")
else:
    DB_NAME = os.getenv("MONGODB_DB_NAME")

MONGO_URI = os.getenv("MONGODB_CONNECTION_STRING")
if not MONGO_URI:
    raise ValueError(
        "MONGODB_CONNECTION_STRING ÌôòÍ≤Ω Î≥ÄÏàòÍ∞Ä ÏóÜÏäµÎãàÎã§. .env ÌååÏùºÏùÑ ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî."
    )


class MongoDB:
    def __init__(self):
        try:
            # Ïï± ÏãúÏûë Ïãú clientÎ•º Ï¥àÍ∏∞Ìôî
            self.client = MongoClient(
                MONGO_URI,
                tlsCAFile=certifi.where(),
                serverSelectionTimeoutMS=5000,
            )
            self.client.admin.command("ping")
            self.db = self.client.get_database(DB_NAME)
            self.collection = self.db.get_collection("chat_reports")
            logger.info("üü¢ MongoDBÏóê ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ïó∞Í≤∞ÎêòÏóàÍ≥†, Ìó¨Ïä§Ï≤¥ÌÅ¨Î•º ÌÜµÍ≥ºÌñàÏäµÎãàÎã§.")

        except ConnectionFailure as e:
            # 4. Ïó∞Í≤∞ Ïã§Ìå® Ïãú ÏóêÎü¨ Î°úÍπÖ Î∞è ÌîÑÎ°úÏÑ∏Ïä§ Ï¢ÖÎ£å
            logger.error(f"üî¥ MongoDB Ïó∞Í≤∞ Ïã§Ìå®: Ìó¨Ïä§Ï≤¥ÌÅ¨Ïóê Ïã§Ìå®ÌñàÏäµÎãàÎã§. ÏóêÎü¨: {e}")
            raise  # ÏóêÎü¨Î•º Îã§Ïãú Î∞úÏÉùÏãúÏºú FastAPI ÏãúÏûëÏùÑ Ï§ëÎã®

    def get_collection(self):
        # ÏÑúÎπÑÏä§ ÌååÏùºÏóêÏÑú ÏÇ¨Ïö©Ìï† Ïª¨Î†âÏÖò Í∞ùÏ≤¥Î•º Î∞òÌôòÌïòÎäî Ìï®Ïàò
        return self.collection

    def close(self):
        # Ïï± Ï¢ÖÎ£å Ïãú Ïó∞Í≤∞ÏùÑ Îã´Ïùå
        self.client.close()
        logger.info("‚ö™ MongoDB Ïó∞Í≤∞Ïù¥ Ìï¥Ï†úÎêòÏóàÏäµÎãàÎã§.")


# Ï†ÑÏó≠ Î≥ÄÏàòÎ°ú MongoDB Ïù∏Ïä§ÌÑ¥Ïä§ ÏÉùÏÑ±
mongodb = MongoDB()


# =================================================================
# Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ìï®Ïàò
# =================================================================
def save_report_to_db(report_data: Dict[str, Any]) -> None:
    """MongoDBÏóê Ïã†Í≥† Îç∞Ïù¥ÌÑ∞ Ï†ÄÏû•"""
    try:
        chat_report_collection = mongodb.get_collection()
        chat_report_collection.insert_one(report_data)
        logger.info(
            f"Chat report saved: {report_data['messageId']}, "
            f"Result: {report_data['result']}, "
            f"Label: {report_data['label']}, "
            f"Confidence: {report_data['confidence']}"
        )
    except Exception as e:
        logger.error(f"MongoDB save failed: {str(e)}")
        raise HTTPException(status_code=500, detail=f"Database error: {str(e)}")
